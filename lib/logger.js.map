{"version":3,"sources":["webpack:///webpack/bootstrap 86998e97cee7c10f5888","webpack:///./src/index.ts","webpack:///./src/constants.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,uCAAuC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,6BAA6B;AAC/D;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClLA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4HAA2H,6DAA6D,EAAE;AAC1L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD","file":"logger.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 86998e97cee7c10f5888","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nvar constants = constants_1.Constants.getInstance();\nvar Logger = (function () {\n    function Logger(prefix, minseverity) {\n        var _this = this;\n        this.severityMap = {\n            1: \"error\",\n            2: \"warn\",\n            3: \"info\",\n            4: \"debug\"\n        };\n        this.colors = {\n            \"error\": 'color: red',\n            \"warn\": 'color: darkorange',\n            \"info\": 'color: darkblue',\n            \"debug\": 'color: black',\n        };\n        this.logPrefix = \"\";\n        this.loghistory = [];\n        this.minseverity = Logger.severity.warn;\n        this.pad = function (n) {\n            return n < 10 ? \"0\" + n : n + \"\";\n        };\n        this.getLocalTime = function () {\n            var d = new Date();\n            d.setMinutes(d.getMinutes() - d.getTimezoneOffset());\n            var isoDate = null;\n            if (constants.HasNativeISODate) {\n                isoDate = d.toISOString().slice(11, 19);\n            }\n            else {\n                isoDate = _this.pad(d.getHours()) + \":\" + _this.pad(d.getMinutes()) + \":\" + _this.pad(d.getSeconds());\n            }\n            return isoDate;\n        };\n        if (prefix) {\n            this.logPrefix = prefix;\n        }\n        if (minseverity) {\n            this.minseverity = minseverity;\n        }\n    }\n    Logger.getInstance = function (prefix, minseverity) {\n        if (!this.__instance) {\n            this.__instance = new Logger(prefix, minseverity);\n        }\n        return this.__instance;\n    };\n    Logger.prototype.writeToConsole = function (severity) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (constants.IsIE) {\n            window.console.log.apply(window.console, arguments);\n            return;\n        }\n        args[0] = this.getLocalTime() + \" \" + this.logPrefix + \" \" + args[0];\n        var consoleTarget = window.console[severity] || window.console[\"log\"];\n        switch (args.length) {\n            case 1: {\n                consoleTarget.call(console, args[0]);\n                break;\n            }\n            case 2: {\n                consoleTarget.call(console, args[0], args[1]);\n                break;\n            }\n            case 3: {\n                consoleTarget.call(console, args[0], args[1], args[2]);\n                break;\n            }\n            case 4: {\n                consoleTarget.call(console, args[0], args[1], args[2], args[3]);\n                break;\n            }\n            default: {\n                consoleTarget.call(console, args[0], args[1], args[2], args[3], args[4]);\n            }\n        }\n        return;\n    };\n    Logger.prototype.log = function (severity) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var severityStr = this.severityMap[severity];\n        if (!severityStr) {\n            this.writeToConsole.apply(this, [\"[ai-lib-logging] severity \" + severity + \" is not valid\"]);\n            return;\n        }\n        if (args.length > 0) {\n            args.unshift(\"[\" + severityStr + \"]\");\n            this.loghistory.push({ severity: severityStr, message: args });\n            if (severity <= this.minseverity && constants.HasConsoleLog) {\n                this.writeToConsole.apply(this, [severityStr].concat(args));\n            }\n        }\n        return;\n    };\n    Logger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var severity = constants.HasConsoleDebug ? Logger.severity.debug : Logger.severity.info;\n        this.log.apply(this, [severity].concat(args));\n        return;\n    };\n    Logger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.log.apply(this, [Logger.severity.info].concat(args));\n        return;\n    };\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.log.apply(this, [Logger.severity.warn].concat(args));\n        return;\n    };\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.log.apply(this, [Logger.severity.error].concat(args));\n        return;\n    };\n    Logger.prototype.dir = function (obj) {\n        if (constants.HasConsoleDir) {\n            console.dir(obj);\n        }\n        else {\n            this.log(Logger.severity.info, obj);\n        }\n        return;\n    };\n    Logger.prototype.dirxml = function (obj) {\n        if (constants.HasConsoleDirXml) {\n            console.dirxml(obj);\n        }\n        else {\n            this.log(Logger.severity.info, obj);\n        }\n        return;\n    };\n    Logger.prototype.dump = function (loglevel) {\n        var _this = this;\n        if (loglevel === void 0) { loglevel = this.minseverity; }\n        this.loghistory.forEach(function (item) {\n            if (Logger.severity[item.severity] <= loglevel) {\n                _this.writeToConsole.apply(_this, [item.severity].concat(item.message));\n            }\n        });\n        return;\n    };\n    Logger.prototype.clear = function () {\n        this.loghistory = [];\n    };\n    Logger.prototype.getLogHistory = function () {\n        return this.loghistory;\n    };\n    return Logger;\n}());\nLogger.severity = {\n    debug: 4,\n    warn: 2,\n    error: 1,\n    info: 3\n};\nexports.Logger = Logger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = (function () {\n    function Constants() {\n        this.HasConsole = window.console;\n        this.HasConsoleLog = this.HasConsole && window.console.log;\n        this.HasConsoleDir = this.HasConsole && window.console.dir;\n        this.HasConsoleDebug = this.HasConsole && window.console.debug;\n        this.HasConsoleDirXml = this.HasConsole && window.console.dirxml;\n        this.HasNativeISODate = typeof Date.prototype.toISOString !== 'undefined';\n        this.IsIE = (navigator.appVersion.match(/MSIE ([\\d.]+)/) || []).length > 0;\n        this.IsSafari = Object.prototype.toString.call(window['HTMLElement']).indexOf('Constructor') > 0 || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || window['safari'].pushNotification);\n    }\n    Constants.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new Constants();\n        }\n        return this.__instance;\n    };\n    return Constants;\n}());\nexports.Constants = Constants;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/constants.ts\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}